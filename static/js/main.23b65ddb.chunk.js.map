{"version":3,"sources":["egg.png","rock.png","bunny.png","GameContext.js","Board.js","Instructions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GameContext","createContext","Board","className","width","Tiles","useContext","game","dispatch","svgRef","useRef","charDatum","row","charPoint","col","cellSize","columns","tiles","getTiles","eggs","getEggs","console","log","length","height","rows","useEffect","svg","d3","current","tile","selectAll","data","newTile","enter","append","classed","attr","t","x","y","cellPadding","filter","rock","merge","char","charImg","d","transition","duration","on","type","egg","exit","remove","eggImg","ref","rocks","i","j","push","has","eggsFound","values","map","directions","left","up","right","down","Instructions","instructions","onClick","payload","dir","key","Instruction","AddInstruction","defaultGame","startPoint","getLookup","running","points","lookup","reduce","acc","add","moveCharPoint","reducer","state","action","splice","instruction","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","info","success","App","useReducer","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23b65ddb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/egg.52ea1c7f.png\";","module.exports = __webpack_public_path__ + \"static/media/rock.71059532.png\";","module.exports = __webpack_public_path__ + \"static/media/bunny.be280460.png\";","import { createContext } from 'react';\n\nexport const GameContext = createContext()","import React, { useRef, useEffect, Fragment as F, useContext } from \"react\"\nimport * as d3 from 'd3'\nimport ContainerDimensions from 'react-container-dimensions'\nimport './Board.css'\nimport eggImg from './egg.png'\nimport rock from './rock.png'\nimport charImg from './bunny.png'\nimport { GameContext } from \"./GameContext\"\n\nexport const Board = () => {\n  return (\n    <div className=\"Board\">\n      <ContainerDimensions>\n        {({ width }) => (<F>\n          <Tiles width={width} />\n        </F>)}\n      </ContainerDimensions>\n    </div>\n  )\n}\n\nconst Tiles = ({  width }) => {\n  const {game, dispatch} = useContext(GameContext)\n\n  const svgRef = useRef()\n  const charDatum = {\n    row: game.charPoint[0],\n    col: game.charPoint[1],\n  }\n  const cellSize = width / game.columns\n  const cellPadding = 6\n  const tiles = getTiles(game, cellSize)\n  const eggs = getEggs(game, cellSize)\n  console.log(`eggs.length`, eggs.length)\n  const height = cellSize * game.rows\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current)\n\n    // TILES\n    let tile = svg\n      .selectAll('g.tileGroup')\n      .data(tiles, (tile) => `${tile.row},${tile.col}`)\n\n    let newTile = tile.enter()\n      .append('g')\n      .classed('tileGroup', true)\n      .attr('transform', (t) => `translate(${t.x}, ${t.y})`)\n    \n    // SQUARES\n    newTile\n      .append('rect')\n      .classed('tileSquare', true)\n      .attr('x', cellPadding / 2)\n      .attr('y', cellPadding / 2)\n      .attr('rx', cellPadding)\n      .attr('width', cellSize - cellPadding)\n      .attr('height', cellSize - cellPadding)\n\n    // ROCKS\n    newTile\n      .filter((t) => t.rock)\n      .append('image')\n      .classed('tileRock', true)\n      .attr('x', cellPadding * 3)\n      .attr('y', cellPadding * 3)\n      .attr('xlink:href', rock)\n      .attr('width', cellSize * 0.7)\n      .attr('height', cellSize * 0.7)\n\n    tile = newTile.merge(tile)\n\n    // CHARACTER\n    let char = svg.selectAll('image.character')\n      .data([charDatum], () => 1)\n    \n    char.enter()\n      .append('image')\n      .classed('character', true)\n      .attr('xlink:href', charImg)\n      .attr('width', cellSize - cellPadding * 2)\n      .attr('height', cellSize - cellPadding * 2)\n      .attr('x', (d) => d.col * cellSize + cellPadding)\n      .attr('y', (d) => d.row * cellSize + cellPadding)\n      .merge(char)\n    \n    char\n      .transition()\n      .duration(700)\n      .attr('x', (d) => d.col * cellSize + cellPadding)\n      .attr('y', (d) => d.row * cellSize + cellPadding)\n      .on('end', () => dispatch({ type: 'moved' }))\n    \n    // EGGS\n    let egg = svg.selectAll('image.egg')\n      .data(eggs, (d) => `${d.row}.${d.col}`)\n\n    egg.exit().remove()\n\n    \n    egg = egg.enter()\n      .append('image')\n      .classed('egg', true)\n      .attr('xlink:href', eggImg)\n      .attr('width', cellSize - cellPadding * 8)\n      .attr('height', cellSize - cellPadding * 8)\n      .attr('x', (d) => d.col * cellSize + cellPadding * 4)\n      .attr('y', (d) => d.row * cellSize + cellPadding * 4)\n      .merge(egg)\n    \n  })\n\n  return (<svg className=\"BoardSvg\" ref={svgRef} width={width} height={height}></svg>)\n}\n\nconst getTiles = ({ rows , columns, rocks }, cellSize) => {\n  const tiles = []\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < columns; j++) {\n      tiles.push({\n        row: i,\n        col: j,\n        x: j * cellSize,\n        y: i * cellSize,\n        rock: rocks.has(i, j),\n        cellSize,\n      })\n    }    \n  }\n  return tiles\n}\n\nconst getEggs = ({ eggs, eggsFound }, cellSize) => {\n  return eggs.values\n    .filter((egg) => !eggsFound.has(...egg))\n    .map(([row, col]) => ({\n      row,\n      col,\n      x: col * cellSize,\n      y: row * cellSize,\n    }))\n}\n","import React, { useContext } from 'react'\nimport './Instructions.css'\nimport { GameContext } from './GameContext';\n\nconst directions = {\n  left: '⇠',\n  up: '⇡',\n  right: '⇢',\n  down: '⇣',\n}\n\nexport const Instructions = () => {\n  const { game: { instructions }, dispatch } = useContext(GameContext)\n  return (<div className=\"Instructions\">\n    <button className=\"RunButton\" onClick={() => dispatch({ type: 'run', payload: 0 })}>Run!</button>\n    <AddInstruction />\n    {instructions.map((dir, i) => <Instruction dir={dir} i={i} key={i} />)}\n  </div>)\n}\n\nconst Instruction = ({ dir, i }) => {\n  const { dispatch } = useContext(GameContext)\n  return (<div className=\"Instruction\">\n  <span className=\"InstructionDir\">{i + 1}.{' '}{' '}{' '}{directions[dir]}</span>\n    <button\n      className=\"InstructionDelete\"\n      onClick={() => dispatch({ type: 'rmInstruction', payload: i })}\n    >\n      x\n    </button>\n  </div>)\n}\n\nconst AddInstruction = () => {\n  const { dispatch } = useContext(GameContext)\n\n  return (<div className=\"AddInstruction\">\n    <div className=\"AddInstructionButtons\">\n      <button\n        type=\"button\"\n        className=\"AddInstructionArrowButton\"\n        onClick={() => dispatch({ type: 'addInstruction', payload: 'left' })}\n      >\n        <span className=\"arrowBtnText\">{directions.left}</span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"AddInstructionArrowButton\"\n        onClick={() => dispatch({ type: 'addInstruction', payload: 'up' })}\n      >\n        <span className=\"arrowBtnText\">{directions.up}</span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"AddInstructionArrowButton\"\n        onClick={() => dispatch({ type: 'addInstruction', payload: 'right' })}\n      >\n        <span className=\"arrowBtnText\">{directions.right}</span>\n      </button>\n      <button\n        type=\"button\"\n        className=\"AddInstructionArrowButton\"\n        onClick={() => dispatch({ type: 'addInstruction', payload: 'down' })}\n      >\n        <span className=\"arrowBtnText\">{directions.down}</span>\n      </button>\n    </div>\n  </div>)\n}","import React, { useReducer } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport {Board} from './Board'\nimport {Instructions} from './Instructions'\nimport { GameContext } from './GameContext'\n\nconst defaultGame = {\n  startPoint: [0, 0],\n  charPoint: [0, 0],\n  columns: 6,\n  rows: 5,\n  eggs: getLookup([[1,1], [3,3], [1,4], [4,5]]),\n  eggsFound: getLookup([]),\n  rocks: getLookup([\n    [0,1], [1,3], [2,3], [4,4]\n  ]),\n  instructions: [],\n  running: -1,\n}\n\nfunction getLookup (points) {\n  const lookup = points.reduce((acc, [row, col]) => {\n    if (!acc[row]) {\n      acc[row] = { [col]: true }\n    } else {\n      acc[row][col] = true\n    }\n    return acc\n  }, {})\n  return {\n    values: points, \n    has: (row, col) => {\n      return lookup[row] && lookup[row][col] === true\n    },\n    add: (row, col) => {\n      if (!lookup[row]) {\n        lookup[row] = { [col]: true }\n      } else {\n        lookup[row][col] = true\n      }\n      points.push([row, col])\n    }\n  }\n}\n\nconst moveCharPoint = (startPoint, dir) => {\n  switch (dir) {\n    case 'up':\n      return [startPoint[0] - 1, startPoint[1]]\n    case 'down':\n      return [startPoint[0] + 1, startPoint[1]]\n    case 'left':\n      return [startPoint[0], startPoint[1] - 1]\n    case 'right':\n      return [startPoint[0], startPoint[1] + 1]\n    default:\n      return [...startPoint]\n  }\n}\n\nfunction reducer(state, action) {\n  switch(action.type) {\n    case 'addInstruction': {\n      return {\n        ...state,\n        instructions: [\n          ...state.instructions,\n          action.payload,\n        ]\n      }\n    }\n    case 'rmInstruction': {\n      const {instructions} = state\n      instructions.splice(action.payload, 1)\n      return {\n        ...state,\n        instructions: [...instructions]\n      }\n    }\n    case 'run': {\n      const instruction = state.instructions[action.payload]\n      if (!instruction) {\n        return state\n      }\n      return {\n        ...state,\n        charPoint: moveCharPoint(state.startPoint, instruction),\n        running: action.payload,\n      }\n    }\n    case 'moved': {\n      // check if we are running\n      if (state.running === -1) {\n        return state\n      }\n      // check validity of spot\n      if (state.rocks.has(...state.charPoint)) {\n        toast.error('You hit a rock!', {\n          position: \"bottom-center\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n        });\n        return {\n          ...state,\n          running: -1,\n          charPoint: [...state.startPoint],\n          eggsFound: getLookup([]),\n        }\n      }\n\n      const [row, col] = state.charPoint\n      const { rows, columns } = state\n      if (row < 0 || row >= rows || col < 0 || col >= columns) {\n        toast.error('You went out of bounds!', {\n          position: \"bottom-center\",\n          autoClose: 5000,\n          hideProgressBar: true,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n        });\n        return {\n          ...state,\n          running: -1,\n          // error: 'You went out of bounds!',\n          charPoint: [...state.startPoint],\n          eggsFound: getLookup([]),\n        }\n      }\n\n      // check for egg\n      if (state.eggs.has(...state.charPoint) && !state.eggsFound.has(...state.charPoint)) {\n        state.eggsFound.add(...state.charPoint)\n      }\n\n      // check if remaining instructions\n      const { running, instructions } = state\n      if (instructions[running + 1]) {\n        return {\n          ...state,\n          running: running + 1,\n          charPoint: moveCharPoint(state.charPoint, instructions[running + 1])\n        }\n      } else {\n        const { eggs, eggsFound } = state\n        if (eggs.values.length > eggsFound.values.length) {\n          toast.info(`You found ${eggsFound.values.length} out of ${eggs.values.length} eggs!`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n        } else {\n          toast.success(`You got all the eggs!!!`, {\n            position: \"bottom-center\",\n            autoClose: 5000,\n            hideProgressBar: true,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n          });\n        }\n        // toast.error('You went out of bounds!', {\n        //   position: \"bottom-center\",\n        //   autoClose: 5000,\n        //   hideProgressBar: true,\n        //   closeOnClick: true,\n        //   pauseOnHover: true,\n        //   draggable: true,\n        // });\n        return {\n          ...state,\n          running: -1,\n          charPoint: [...state.startPoint],\n          eggsFound: getLookup([]),\n        }\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nfunction App() {\n  const [game, dispatch] = useReducer(reducer, defaultGame)\n  return (\n    <GameContext.Provider value={{game, dispatch}}>\n      <div className=\"App\">\n        <Board />\n        <Instructions />\n      </div>\n      <ToastContainer />\n    </GameContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}